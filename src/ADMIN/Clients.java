/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ADMIN;

import static ADMIN.InquiriesAdmin.companytf;
import static ADMIN.InquiriesAdmin.inquirytf;
import static ADMIN.InquiriesAdmin.ipmtf;
import static ADMIN.InquiriesAdmin.servicetf;
import static ADMIN.InquiriesAdmin.stat;
import static EMPLOYEE.Inquiries.companytf;
import static EMPLOYEE.Inquiries.inquirytf;
import static EMPLOYEE.Inquiries.ipmtf;
import static EMPLOYEE.Inquiries.servicetf;
import static EMPLOYEE.Inquiries.stat;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Henreizh Nathan
 */
public class Clients extends javax.swing.JFrame {

    /**
     * Creates new form Clients
     */
        Connection con;
    PreparedStatement pst;
    ResultSet rs;
    int q, i, id, deleteItem;
    
    public Clients() {
        initComponents();
        this.setLocationRelativeTo(null);
        savebtn.setEnabled(false);

    String SUrl = "jdbc:MYSQL://localhost:3306/ja consultancy services";
        String Suser = "root";
        String Spass = "";
        String query = "SELECT * FROM client_table";

        try (Connection con = DriverManager.getConnection(SUrl, Suser, Spass);
             PreparedStatement pst = con.prepareStatement(query);
             ResultSet rs = pst.executeQuery()) {

            DefaultTableModel model = (DefaultTableModel) table.getModel();

            while (rs.next()) {
                model.addRow(new String[]{
                    rs.getString(1),
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4),
                    rs.getString(5)
                });
//                JOptionPane.showMessageDialog(rootPane, "Succesfull!");
            }
            

        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        clientidtf = new javax.swing.JTextField();
        ipmtf = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        searchtf = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        contacttf = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        emailtf = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        addresstf = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        savebtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        editbtn = new javax.swing.JButton();
        resetbtn = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jButton5.setBackground(new java.awt.Color(204, 204, 204));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton5.setText("Reset");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(null);

        table.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Client ID", "IPM_ID", "Contact No.", "Email", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(40, 170, 860, 490);

        clientidtf.setEditable(false);
        clientidtf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(clientidtf);
        clientidtf.setBounds(1210, 90, 220, 40);

        ipmtf.setEditable(false);
        ipmtf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(ipmtf);
        ipmtf.setBounds(940, 200, 240, 40);

        jButton1.setBackground(new java.awt.Color(0, 102, 102));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(290, 100, 80, 40);

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel8.setText("IPM ID:");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(940, 170, 180, 20);

        searchtf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchtfActionPerformed(evt);
            }
        });
        searchtf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchtfKeyReleased(evt);
            }
        });
        jPanel1.add(searchtf);
        searchtf.setBounds(40, 100, 240, 40);

        jLabel9.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel9.setText("CLIENT ID:");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(1110, 100, 110, 18);

        contacttf.setEditable(false);
        contacttf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        contacttf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contacttfKeyTyped(evt);
            }
        });
        jPanel1.add(contacttf);
        contacttf.setBounds(940, 310, 240, 40);

        jLabel10.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel10.setText("Contact No.");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(940, 280, 180, 20);

        emailtf.setEditable(false);
        emailtf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(emailtf);
        emailtf.setBounds(940, 420, 240, 40);

        jLabel11.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel11.setText("Email:");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(940, 390, 180, 20);

        addresstf.setEditable(false);
        addresstf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(addresstf);
        addresstf.setBounds(940, 530, 240, 40);

        jLabel12.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel12.setText("Address:");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(940, 500, 180, 20);

        savebtn.setBackground(new java.awt.Color(0, 153, 102));
        savebtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        savebtn.setForeground(new java.awt.Color(255, 255, 255));
        savebtn.setText("Save");
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });
        jPanel1.add(savebtn);
        savebtn.setBounds(1060, 620, 100, 40);

        deletebtn.setBackground(new java.awt.Color(255, 204, 204));
        deletebtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        deletebtn.setText("Delete");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });
        jPanel1.add(deletebtn);
        deletebtn.setBounds(1300, 620, 100, 40);

        editbtn.setBackground(new java.awt.Color(48, 54, 66));
        editbtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        editbtn.setForeground(new java.awt.Color(255, 255, 255));
        editbtn.setText("Edit");
        editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbtnActionPerformed(evt);
            }
        });
        jPanel1.add(editbtn);
        editbtn.setBounds(940, 620, 100, 40);

        resetbtn.setBackground(new java.awt.Color(204, 204, 204));
        resetbtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        resetbtn.setText("Reset");
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });
        jPanel1.add(resetbtn);
        resetbtn.setBounds(1180, 620, 100, 40);

        jButton7.setText("Back");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7);
        jButton7.setBounds(40, 683, 90, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ADMIN/client detail bg.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1450, 730);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1450, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(model);
        table.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(searchtf.getText()));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        new FileMaintenance().setVisible(true);
        dispose();
                
    }//GEN-LAST:event_jButton7ActionPerformed

    private void searchtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchtfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchtfActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed

       DefaultTableModel model = (DefaultTableModel) table.getModel();
        int selectedRowIndex = table.getSelectedRow();
//    DELETE FROM `inquiry_and_proposal` WHERE 0
try {
    
         id = Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString());
        
        int delete = JOptionPane.showConfirmDialog(null,"Confirm if you want to delete item","Warning",JOptionPane.YES_NO_OPTION);
        
        if (delete ==JOptionPane.YES_NO_OPTION) {
            Class.forName("com.mysql.cj.jdbc.Driver");
           
         String url = "jdbc:MYSQL://localhost:3306/ja consultancy services";
         String user = "jaroot";
         String pass = "";
         Connection con = DriverManager.getConnection(url,user,pass);
         
        String sqlPayment = "DELETE FROM `payment_table` WHERE `Client_ID`=?";
        PreparedStatement pstPayment = con.prepareStatement(sqlPayment);
        pstPayment.setInt(1, id);
        pstPayment.executeUpdate();
        
        String sqlTransaction = "DELETE FROM `Transaction_table` WHERE `Client_ID`=?";
        PreparedStatement pstTransaction = con.prepareStatement(sqlTransaction);
        pstTransaction.setInt(1, id);
        pstTransaction.executeUpdate();
        
        String sqlReport = "DELETE FROM `realreport` WHERE `Client_ID`=?";
        PreparedStatement pstReport = con.prepareStatement(sqlReport);
        pstReport.setInt(1, id);
        pstReport.executeUpdate();
        
        String sqlscheduling = "DELETE FROM `scheduling_id` WHERE `Client_ID`=?";
        PreparedStatement pstsched = con.prepareStatement(sqlscheduling);
        pstsched.setInt(1, id);
        pstsched.executeUpdate();
        
        String sqlreport = "DELETE FROM `realreport` WHERE `Client_ID`=?";
        PreparedStatement pstreport = con.prepareStatement(sqlreport);
        pstreport.setInt(1, id);
        pstreport.executeUpdate();
        
         String sqlClient = "DELETE FROM `client_table` WHERE `Client_ID`=?";
        PreparedStatement pstClient = con.prepareStatement(sqlClient);
        pstClient.setInt(1, id);
        pstClient.executeUpdate();
        
        model.removeRow(selectedRowIndex);
        JOptionPane.showMessageDialog(new JFrame(), "Row Deleted Successfully", "Success!", JOptionPane.CANCEL_OPTION);
        clientidtf.setText("");
        ipmtf.setText("");
        contacttf.setText("");
        emailtf.setText("");
        addresstf.setText("");  
        

    } else {
        JOptionPane.showMessageDialog(new JFrame(), "No Row Selected", "Warning!", JOptionPane.WARNING_MESSAGE);
    }
} catch (Exception ex) {
    Logger.getLogger(InquiriesAdmin.class.getName()).log(Level.SEVERE, null, ex);
    JOptionPane.showMessageDialog(new JFrame(), "Deletion Failed", "Error!", JOptionPane.ERROR_MESSAGE);
}

   
    }//GEN-LAST:event_deletebtnActionPerformed

    private void editbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbtnActionPerformed
if(table.getSelectedRow() <0){
        JOptionPane.showMessageDialog(null, "Please select an account!");
        
        }else{
            contacttf.setEditable(true);
            emailtf.setEditable(true);
            addresstf.setEditable(true);
            
            savebtn.setEnabled(true);
}                                
                            
    }//GEN-LAST:event_editbtnActionPerformed

    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed
                        
                            contacttf.setText("");
                            emailtf.setText("");
                            addresstf.setText("");
    }//GEN-LAST:event_resetbtnActionPerformed

    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
            
    int length =contacttf.getText().length();
     if("".equals(contacttf.getText())){
         JOptionPane.showMessageDialog(new JFrame(), "Contact Number is required", "Error", JOptionPane.ERROR_MESSAGE);
     }  
        else if(length <11){
                 JOptionPane.showMessageDialog(new JFrame(), "Cell No. should contain 11 numbers", "Error!", JOptionPane.ERROR_MESSAGE);
            }
    else if(length >11){
                 JOptionPane.showMessageDialog(new JFrame(), "Cell No. should contain 11 numbers only.", "Error!", JOptionPane.ERROR_MESSAGE);
            }
     else if("".equals(emailtf.getText())){
         JOptionPane.showMessageDialog(new JFrame(), "Email is required", "Error", JOptionPane.ERROR_MESSAGE);
     }
     else if("".equals(addresstf.getText())){
         JOptionPane.showMessageDialog(new JFrame(), "Address is required", "Error", JOptionPane.ERROR_MESSAGE);
     }
     else{  
         
         try{
            String SUrl,Suser, Spass;
    SUrl = "jdbc:MYSQL://localhost:3306/ja consultancy services";
    Suser = "root";
    Spass = "";
           con = DriverManager.getConnection(SUrl,Suser,Spass);
   
    pst = con.prepareStatement("UPDATE client_table SET IPM_ID =?, Contact_No =?, Email =?, Address =? where Client_ID=?");
    pst.setString(1,ipmtf.getText());
    pst.setString(2,contacttf.getText());
    pst.setString(3,emailtf.getText());
    pst.setString(4,addresstf.getText());
    pst.setString(5,clientidtf.getText());
    
    
    int rowsAffected = pst.executeUpdate(); 
    
    if (rowsAffected > 0 ){
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int selectedRowIndex = table.getSelectedRow();
        
        model.setValueAt(clientidtf.getText(), selectedRowIndex, 0);
        model.setValueAt(ipmtf.getText(), selectedRowIndex, 1);
        model.setValueAt(contacttf.getText(), selectedRowIndex, 2);
        model.setValueAt(emailtf.getText(), selectedRowIndex, 3);
        model.setValueAt(addresstf.getText(), selectedRowIndex, 4);
        
        
       JOptionPane.showMessageDialog(new JFrame(), "Updated Successfully", "Successed!", JOptionPane.OK_CANCEL_OPTION);

       savebtn.setEnabled(false);
       clientidtf.setText("");
       ipmtf.setText("");
       contacttf.setText("");
       addresstf.setText("");
       emailtf.setText("");
       
    } else{
        JOptionPane.showMessageDialog(new JFrame(), "Update Failed", "Warning!", JOptionPane.ERROR_MESSAGE);
    }

       
} catch (SQLException ex) {
            Logger.getLogger(adminScheduling.class.getName()).log(Level.SEVERE, null, ex);
       
}
        }

    }//GEN-LAST:event_savebtnActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
      int id = Integer.parseInt(table.getValueAt(table.getSelectedRow(),0).toString());
        try{
               Class.forName("com.mysql.cj.jdbc.Driver");
           
         String url = "jdbc:MYSQL://localhost:3306/ja consultancy services";
         String user = "jaroot";
         String pass = "";
         
         Connection con = DriverManager.getConnection(url,user,pass);
         Statement st = con.createStatement();
         ResultSet res =st.executeQuery("select * from client_table where Client_ID ="+id);
                        while(res.next()){
                            clientidtf.setText(res.getString("Client_ID"));
                            ipmtf.setText(res.getString("IPM_ID"));
                            contacttf.setText(res.getString("Contact_No"));
                            emailtf.setText(res.getString("Email"));
                            addresstf.setText(res.getString("Address"));
                             
                             
                            clientidtf.setEditable(false);
                            ipmtf.setEditable(false);
                            contacttf.setEditable(false);
                            emailtf.setEditable(false);
                            addresstf.setEditable(false);
                            
                        }
                
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
//        int id = Integer.parseInt(table.getValueAt(table.getSelectedRow(),0).toString());
//        try{
//            Class.forName("com.mysql.cj.jdbc.Driver");
//
//            String url = "jdbc:MYSQL://localhost:3306/ja consultancy services";
//            String user = "jaroot";
//            String pass = "";
//
//            Connection con = DriverManager.getConnection(url,user,pass);
//            Statement st = con.createStatement();
//            ResultSet res =st.executeQuery("select * from client_table where Client_ID ="+id);
//            while(res.next()){
//                clientidtf.setText(res.getString("Client_ID"));
//                comptf.setText(res.getString("IPM_ID"));
//                contacttf.setText(res.getString("Status"));
//                emailtf.setText(res.getString("Inquiry_Date"));
//                addresstf.setText(res.getString("Service_Type"));
//
//                clientidtf.setEditable(false);
//                comptf.setEditable(false);
//                contacttf.setEditable(false);
//                emailtf.setEditable(false);
//                addresstf.setEditable(false);
//
//            }
//
//        }
//        catch(Exception e){
//            e.printStackTrace();
//        }

    }//GEN-LAST:event_tableMouseClicked

    private void contacttfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contacttfKeyTyped
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_contacttfKeyTyped

    private void searchtfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchtfKeyReleased
            if(searchtf.getText().equals("")){
                 DefaultTableModel model = (DefaultTableModel) table.getModel();
                TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(model);
                table.setRowSorter(obj);
                obj.setRowFilter(RowFilter.regexFilter(""));
            }
    }//GEN-LAST:event_searchtfKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clients().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addresstf;
    private javax.swing.JTextField clientidtf;
    private javax.swing.JTextField contacttf;
    private javax.swing.JButton deletebtn;
    private javax.swing.JButton editbtn;
    private javax.swing.JTextField emailtf;
    private javax.swing.JTextField ipmtf;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton resetbtn;
    private javax.swing.JButton savebtn;
    private javax.swing.JTextField searchtf;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
